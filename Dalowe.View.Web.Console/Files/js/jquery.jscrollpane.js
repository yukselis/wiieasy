(function (e, t, n) { e.fn.jScrollPane = function (t) { function r(t, r) { function $(r) { var s, g, y, E, S, T, N, C; i = r; if (o === n) { N = t.scrollTop(); C = t.scrollLeft(); t.css({ overflow: "hidden", padding: 0 }); u = t.innerWidth() + I; a = t.innerHeight(); t.width(u); o = e('<div class="jspPane" />').css("padding", F).append(t.children()); f = e('<div class="jspContainer" />').css({ width: u + "px", height: a + "px" }).append(o).appendTo(t) } else { t.css("width", ""); T = t.innerWidth() + I != u || t.outerHeight() != a; if (T) { u = t.innerWidth() + I; a = t.innerHeight(); f.css({ width: u + "px", height: a + "px" }) } if (!T && q == l && o.outerHeight() == h) { t.width(u); return } q = l; o.css("width", ""); t.width(u); f.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end() } s = o.clone(false, false).css("position", "absolute"); g = e('<div style="width:1px; position: relative;" />').append(s); e("body").append(g); l = Math.max(o.outerWidth(), s.outerWidth()); g.remove(); h = o.outerHeight(); p = l / u; d = h / a; v = d > 1; m = p > 1; if (!(m || v)) { t.removeClass("jspScrollable"); o.css({ top: 0, width: f.width() - I }); gt(); wt(); St(); rt(); Tt() } else { t.addClass("jspScrollable"); y = i.maintainPosition && (w || x); if (y) { E = dt(); S = vt() } J(); Q(); Y(); if (y) { ht(E, false); ct(S, false) } bt(); mt(); Ct(); if (i.enableKeyboardNavigation) { Et() } if (i.clickOnTrack) { nt() } xt(); if (i.hijackInternalLinks) { Nt() } } if (i.autoReinitialise && !j) { j = setInterval(function () { $(i) }, i.autoReinitialiseDelay) } else { if (!i.autoReinitialise && j) { clearInterval(j) } } N && t.scrollTop(0) && ct(N, false); C && t.scrollLeft(0) && ht(C, false); t.trigger("jsp-initialised", [m || v]) } function J() { if (v) { f.append(e('<div class="jspVerticalBar" />').append(e('<div class="jspCap jspCapTop" />'), e('<div class="jspTrack" />').append(e('<div class="jspDrag" />').append(e('<div class="jspDragTop" />'), e('<div class="jspDragBottom" />'))), e('<div class="jspCap jspCapBottom" />'))); T = f.find(">.jspVerticalBar"); N = T.find(">.jspTrack"); g = N.find(">.jspDrag"); if (i.showArrows) { A = e('<a class="jspArrow jspArrowUp" />').bind("mousedown.jsp", et(0, -1)).bind("click.jsp", yt); O = e('<a class="jspArrow jspArrowDown" />').bind("mousedown.jsp", et(0, 1)).bind("click.jsp", yt); if (i.arrowScrollOnHover) { A.bind("mouseover.jsp", et(0, -1, A)); O.bind("mouseover.jsp", et(0, 1, O)) } Z(N, i.verticalArrowPositions, A, O) } k = a; f.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function () { k -= e(this).outerHeight() }); g.hover(function () { g.addClass("jspHover") }, function () { g.removeClass("jspHover") }).bind("mousedown.jsp", function (t) { e("html").bind("dragstart.jsp selectstart.jsp", yt); g.addClass("jspActive"); var n = t.pageY - g.position().top; e("html").bind("mousemove.jsp", function (e) { st(e.pageY - n, false) }).bind("mouseup.jsp mouseleave.jsp", it); return false }); K() } } function K() { N.height(k + "px"); w = 0; C = i.verticalGutter + N.outerWidth(); o.width(u - C - I); if (T.position().left === 0) { o.css("margin-left", C + "px") } } function Q() { if (m) { f.append(e('<div class="jspHorizontalBar" />').append(e('<div class="jspCap jspCapLeft" />'), e('<div class="jspTrack" />').append(e('<div class="jspDrag" />').append(e('<div class="jspDragLeft" />'), e('<div class="jspDragRight" />'))), e('<div class="jspCap jspCapRight" />'))); M = f.find(">.jspHorizontalBar"); _ = M.find(">.jspTrack"); E = _.find(">.jspDrag"); if (i.showArrows) { H = e('<a class="jspArrow jspArrowLeft" />').bind("mousedown.jsp", et(-1, 0)).bind("click.jsp", yt); B = e('<a class="jspArrow jspArrowRight" />').bind("mousedown.jsp", et(1, 0)).bind("click.jsp", yt); if (i.arrowScrollOnHover) { H.bind("mouseover.jsp", et(-1, 0, H)); B.bind("mouseover.jsp", et(1, 0, B)) } Z(_, i.horizontalArrowPositions, H, B) } E.hover(function () { E.addClass("jspHover") }, function () { E.removeClass("jspHover") }).bind("mousedown.jsp", function (t) { e("html").bind("dragstart.jsp selectstart.jsp", yt); E.addClass("jspActive"); var n = t.pageX - E.position().left; e("html").bind("mousemove.jsp", function (e) { ut(e.pageX - n, false) }).bind("mouseup.jsp mouseleave.jsp", it); return false }); D = f.innerWidth(); G() } } function G() { f.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function () { D -= e(this).outerWidth() }); _.width(D + "px"); x = 0 } function Y() { if (m && v) { var t = _.outerHeight(), n = N.outerWidth(); k -= t; e(M).find(">.jspCap:visible,>.jspArrow").each(function () { D += e(this).outerWidth() }); D -= n; a -= n; u -= t; _.parent().append(e('<div class="jspCorner" />').css("width", t + "px")); K(); G() } if (m) { o.width(f.outerWidth() - I + "px") } h = o.outerHeight(); d = h / a; if (m) { P = Math.ceil(1 / p * D); if (P > i.horizontalDragMaxWidth) { P = i.horizontalDragMaxWidth } else { if (P < i.horizontalDragMinWidth) { P = i.horizontalDragMinWidth } } E.width(P + "px"); S = D - P; at(x) } if (v) { L = Math.ceil(1 / d * k); if (L > i.verticalDragMaxHeight) { L = i.verticalDragMaxHeight } else { if (L < i.verticalDragMinHeight) { L = i.verticalDragMinHeight } } g.height(L + "px"); y = k - L; ot(w) } } function Z(e, t, n, r) { var i = "before", s = "after", o; if (t == "os") { t = /Mac/.test(navigator.platform) ? "after" : "split" } if (t == i) { s = t } else { if (t == s) { i = t; o = n; n = r; r = o } } e[i](n)[s](r) } function et(e, t, n) { return function () { tt(e, t, this, n); this.blur(); return false } } function tt(t, n, r, o) { r = e(r).addClass("jspActive"); var u, a, f = true, l = function () { if (t !== 0) { s.scrollByX(t * i.arrowButtonSpeed) } if (n !== 0) { s.scrollByY(n * i.arrowButtonSpeed) } a = setTimeout(l, f ? i.initialDelay : i.arrowRepeatFreq); f = false }; l(); u = o ? "mouseout.jsp" : "mouseup.jsp"; o = o || e("html"); o.bind(u, function () { r.removeClass("jspActive"); a && clearTimeout(a); a = null; o.unbind(u) }) } function nt() { rt(); if (v) { N.bind("mousedown.jsp", function (t) { if (t.originalTarget === n || t.originalTarget == t.currentTarget) { var r = e(this), o = r.offset(), u = t.pageY - o.top - w, f, l = true, p = function () { var e = r.offset(), n = t.pageY - e.top - L / 2, o = a * i.scrollPagePercent, c = y * o / (h - a); if (u < 0) { if (w - c > n) { s.scrollByY(-o) } else { st(n) } } else { if (u > 0) { if (w + c < n) { s.scrollByY(o) } else { st(n) } } else { d(); return } } f = setTimeout(p, l ? i.initialDelay : i.trackClickRepeatFreq); l = false }, d = function () { f && clearTimeout(f); f = null; e(document).unbind("mouseup.jsp", d) }; p(); e(document).bind("mouseup.jsp", d); return false } }) } if (m) { _.bind("mousedown.jsp", function (t) { if (t.originalTarget === n || t.originalTarget == t.currentTarget) { var r = e(this), o = r.offset(), a = t.pageX - o.left - x, f, h = true, p = function () { var e = r.offset(), n = t.pageX - e.left - P / 2, o = u * i.scrollPagePercent, c = S * o / (l - u); if (a < 0) { if (x - c > n) { s.scrollByX(-o) } else { ut(n) } } else { if (a > 0) { if (x + c < n) { s.scrollByX(o) } else { ut(n) } } else { d(); return } } f = setTimeout(p, h ? i.initialDelay : i.trackClickRepeatFreq); h = false }, d = function () { f && clearTimeout(f); f = null; e(document).unbind("mouseup.jsp", d) }; p(); e(document).bind("mouseup.jsp", d); return false } }) } } function rt() { if (_) { _.unbind("mousedown.jsp") } if (N) { N.unbind("mousedown.jsp") } } function it() { e("html").unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp"); if (g) { g.removeClass("jspActive") } if (E) { E.removeClass("jspActive") } } function st(e, t) { if (!v) { return } if (e < 0) { e = 0 } else { if (e > y) { e = y } } if (t === n) { t = i.animateScroll } if (t) { s.animate(g, "top", e, ot) } else { g.css("top", e); ot(e) } } function ot(e) { if (e === n) { e = g.position().top } f.scrollTop(0); w = e; var r = w === 0, i = w == y, s = e / y, u = -s * (h - a); if (R != r || z != i) { R = r; z = i; t.trigger("jsp-arrow-change", [R, z, U, W]) } ft(r, i); o.css("top", u); t.trigger("jsp-scroll-y", [-u, r, i]).trigger("scroll") } function ut(e, t) { if (!m) { return } if (e < 0) { e = 0 } else { if (e > S) { e = S } } if (t === n) { t = i.animateScroll } if (t) { s.animate(E, "left", e, at) } else { E.css("left", e); at(e) } } function at(e) { if (e === n) { e = E.position().left } f.scrollTop(0); x = e; var r = x === 0, i = x == S, s = e / S, a = -s * (l - u); if (U != r || W != i) { U = r; W = i; t.trigger("jsp-arrow-change", [R, z, U, W]) } lt(r, i); o.css("left", a); t.trigger("jsp-scroll-x", [-a, r, i]).trigger("scroll") } function ft(e, t) { if (i.showArrows) { A[e ? "addClass" : "removeClass"]("jspDisabled"); O[t ? "addClass" : "removeClass"]("jspDisabled") } } function lt(e, t) { if (i.showArrows) { H[e ? "addClass" : "removeClass"]("jspDisabled"); B[t ? "addClass" : "removeClass"]("jspDisabled") } } function ct(e, t) { var n = e / (h - a); st(n * y, t) } function ht(e, t) { var n = e / (l - u); ut(n * S, t) } function pt(t, n, r) { var s, o, l, c = 0, h = 0, p, d, v, m, g; try { s = e(t) } catch (y) { return } o = s.outerHeight(); l = s.outerWidth(); f.scrollTop(0); f.scrollLeft(0); while (!s.is(".jspPane")) { c += s.position().top; h += s.position().left; s = s.offsetParent(); if (/^body|html$/i.test(s[0].nodeName)) { return } } p = vt(); d = p + a; if (c < p || n) { m = c - i.verticalGutter } else { if (c + o > d) { m = c - a + o + i.verticalGutter } } if (m) { ct(m, r) } viewportLeft = dt(); v = viewportLeft + u; if (h < viewportLeft || n) { g = h - i.horizontalGutter } else { if (h + l > v) { g = h - u + l + i.horizontalGutter } } if (g) { ht(g, r) } } function dt() { return -o.position().left } function vt() { return -o.position().top } function mt() { f.unbind(V).bind(V, function (e, t, n, r) { var o = x, u = w; s.scrollBy(n * i.mouseWheelSpeed, -r * i.mouseWheelSpeed, false); return o == x && u == w }) } function gt() { f.unbind(V) } function yt() { return false } function bt() { o.find(":input,a").unbind("focus.jsp").bind("focus.jsp", function (e) { pt(e.target, false) }) } function wt() { o.find(":input,a").unbind("focus.jsp") } function Et() { function r() { var t = x, r = w; switch (e) { case 40: s.scrollByY(i.keyboardSpeed, false); break; case 38: s.scrollByY(-i.keyboardSpeed, false); break; case 34: case 32: s.scrollByY(a * i.scrollPagePercent, false); break; case 33: s.scrollByY(-a * i.scrollPagePercent, false); break; case 39: s.scrollByX(i.keyboardSpeed, false); break; case 37: s.scrollByX(-i.keyboardSpeed, false); break } n = t != x || r != w; return n } var e, n; o.focus(function () { t.focus() }); t.attr("tabindex", 0).unbind("keydown.jsp keypress.jsp").bind("keydown.jsp", function (t) { if (t.target !== this) { return } var i = x, s = w; switch (t.keyCode) { case 40: case 38: case 34: case 32: case 33: case 39: case 37: e = t.keyCode; r(); break; case 35: ct(h - a); e = null; break; case 36: ct(0); e = null; break } n = t.keyCode == e && i != x || s != w; return !n }).bind("keypress.jsp", function (t) { if (t.keyCode == e) { r() } return !n }); if (i.hideFocus) { t.css("outline", "none"); if ("hideFocus" in f[0]) { t.attr("hideFocus", true) } } else { t.css("outline", ""); if ("hideFocus" in f[0]) { t.attr("hideFocus", false) } } } function St() { t.attr("tabindex", "-1").removeAttr("tabindex").unbind("keydown.jsp keypress.jsp") } function xt() { if (location.hash && location.hash.length > 1) { var t, n; try { t = e(location.hash) } catch (r) { return } if (t.length && o.find(location.hash)) { if (f.scrollTop() === 0) { n = setInterval(function () { if (f.scrollTop() > 0) { pt(location.hash, true); e(document).scrollTop(f.position().top); clearInterval(n) } }, 50) } else { pt(location.hash, true); e(document).scrollTop(f.position().top) } } } } function Tt() { e("a.jspHijack").unbind("click.jsp-hijack").removeClass("jspHijack") } function Nt() { Tt(); e("a[href^=#]").addClass("jspHijack").bind("click.jsp-hijack", function () { var e = this.href.split("#"), t; if (e.length > 1) { t = e[1]; if (t.length > 0 && o.find("#" + t).length > 0) { pt("#" + t, true); return false } } }) } function Ct() { var e, t, n, r, i, o = false; f.unbind("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").bind("touchstart.jsp", function (s) { var u = s.originalEvent.touches[0]; e = dt(); t = vt(); n = u.pageX; r = u.pageY; i = false; o = true }).bind("touchmove.jsp", function (u) { if (!o) { return } var a = u.originalEvent.touches[0], f = x, l = w; s.scrollTo(e + n - a.pageX, t + r - a.pageY); i = i || Math.abs(n - a.pageX) > 5 || Math.abs(r - a.pageY) > 5; return f == x && l == w }).bind("touchend.jsp", function (e) { o = false }).bind("click.jsp-touchclick", function (e) { if (i) { i = false; return false } }) } function kt() { var e = vt(), n = dt(); t.removeClass("jspScrollable").unbind(".jsp"); t.replaceWith(X.append(o.children())); X.scrollTop(e); X.scrollLeft(n) } var i, s = this, o, u, a, f, l, h, p, d, v, m, g, y, w, E, S, x, T, N, C, k, L, A, O, M, _, D, P, H, B, j, F, I, q, R = true, U = true, z = false, W = false, X = t.clone(false, false).empty(), V = e.fn.mwheelIntent ? "mwheelIntent.jsp" : "mousewheel.jsp"; F = t.css("paddingTop") + " " + t.css("paddingRight") + " " + t.css("paddingBottom") + " " + t.css("paddingLeft"); I = (parseInt(t.css("paddingLeft"), 10) || 0) + (parseInt(t.css("paddingRight"), 10) || 0); e.extend(s, { reinitialise: function (t) { t = e.extend({}, i, t); $(t) }, scrollToElement: function (e, t, n) { pt(e, t, n) }, scrollTo: function (e, t, n) { ht(e, n); ct(t, n) }, scrollToX: function (e, t) { ht(e, t) }, scrollToY: function (e, t) { ct(e, t) }, scrollToPercentX: function (e, t) { ht(e * (l - u), t) }, scrollToPercentY: function (e, t) { ct(e * (h - a), t) }, scrollBy: function (e, t, n) { s.scrollByX(e, n); s.scrollByY(t, n) }, scrollByX: function (e, t) { var n = dt() + e, r = n / (l - u); ut(r * S, t) }, scrollByY: function (e, t) { var n = vt() + e, r = n / (h - a); st(r * y, t) }, positionDragX: function (e, t) { ut(e, t) }, positionDragY: function (e, t) { ut(e, t) }, animate: function (e, t, n, r) { var s = {}; s[t] = n; e.animate(s, { duration: i.animateDuration, ease: i.animateEase, queue: false, step: r }) }, getContentPositionX: function () { return dt() }, getContentPositionY: function () { return vt() }, getContentWidth: function () { return l() }, getContentHeight: function () { return h() }, getPercentScrolledX: function () { return dt() / (l - u) }, getPercentScrolledY: function () { return vt() / (h - a) }, getIsScrollableH: function () { return m }, getIsScrollableV: function () { return v }, getContentPane: function () { return o }, scrollToBottom: function (e) { st(y, e) }, hijackInternalLinks: function () { Nt() }, destroy: function () { kt() } }); $(r) } t = e.extend({}, e.fn.jScrollPane.defaults, t); e.each(["mouseWheelSpeed", "arrowButtonSpeed", "trackClickSpeed", "keyboardSpeed"], function () { t[this] = t[this] || t.speed }); var i; this.each(function () { var n = e(this), s = n.data("jsp"); if (s) { s.reinitialise(t) } else { s = new r(n, t); n.data("jsp", s) } i = i ? i.add(n) : n }); return i }; e.fn.jScrollPane.defaults = { showArrows: false, maintainPosition: true, clickOnTrack: true, autoReinitialise: false, autoReinitialiseDelay: 500, verticalDragMinHeight: 0, verticalDragMaxHeight: 99999, horizontalDragMinWidth: 0, horizontalDragMaxWidth: 99999, animateScroll: false, animateDuration: 300, animateEase: "linear", hijackInternalLinks: false, verticalGutter: 4, horizontalGutter: 4, mouseWheelSpeed: 0, arrowButtonSpeed: 0, arrowRepeatFreq: 50, arrowScrollOnHover: false, trackClickSpeed: 0, trackClickRepeatFreq: 70, verticalArrowPositions: "split", horizontalArrowPositions: "split", enableKeyboardNavigation: true, hideFocus: false, keyboardSpeed: 0, initialDelay: 300, speed: 30, scrollPagePercent: .8 } })(jQuery, this)